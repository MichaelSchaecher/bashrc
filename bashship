#!/usr/bin/env bash

# Helpers
function color () { tput setaf "$1"; }

# User + Host
function prompt-user-host () {
    local user="\u" host=""
    if [[ -n "$SSH_CONNECTION" || -n "$SSH_TTY" || -n "$SSH_CLIENT" ]]; then
        host="@ssh:\h"
    fi

    # shellcheck disable=SC2086
    # shellcheck disable=SC2153
    if [[ $EUID -eq 0 ]]; then
        echo -ne "${BOLD}$(color $USER)${user}${RESET}$(color $HOST)${host}${RESET} "
    else
        echo -ne "${BOLD}$(color 7)${user}${RESET}$(color $HOST)${host}${RESET} "
    fi

}

# Path
function prompt-path () {

    local path

    [[ "$PWD" == "$HOME" ]] && path="~"
    [[ $EUID -eq 0 ]] && path="$PWD" || path="${PWD/#$HOME/~}"

    # shellcheck disable=SC2086
    echo -ne "$(color $PATH)$path${RESET} "

}

# Git
function prompt-git () {

    git rev-parse --is-inside-work-tree >/dev/null 2>&1 || return

    local branch symbols="" status ahead

    branch=$(git symbolic-ref --short HEAD 2>/dev/null)
    status=$(git status --porcelain 2>/dev/null)

    echo "$status" | grep -q '^UU' && symbols+=" $(color 9)${CONFLICT}${RESET}"
    echo "$status" | grep -q '^\?\?' && symbols+=" $(color 14)${UNTRACKED}${RESET}"
    echo "$status" | grep -q '^ M' && symbols+=" $(color 11)${STAGED}${RESET}"
    echo "$status" | grep -q '^M ' && symbols+=" $(color 2)${MODIFIED}${RESET}"
    echo "$status" | grep -q '^ D' && symbols+=" $(color 1)${DELETED}${RESET}"

    open="$OPEN"
    close="$CLOSE"

    # shellcheck disable=SC1083
    if git rev-list --count --left-right @{upstream}...HEAD >/dev/null 2>&1; then

        # shellcheck disable=SC1083
        ahead=$(git \
            rev-list --count --left-right \
            @{upstream}...HEAD 2>/dev/null | awk '{print $2}')

        # shellcheck disable=SC2153
        [[ $ahead -gt 0 ]] && symbols+=" $(color 5)${AHEAD}${RESET}"
    fi

    echo -ne "$(color "$GIT")$open${RESET} $branch$symbols $(color "$GIT")$close${RESET} "
}

# Virtual Env
function prompt-venv () {

    [[ $SHOW_VENV -eq 1 && -n "$VIRTUAL_ENV" ]] &&
        echo -ne "$(color "$VENV")($(basename "$VIRTUAL_ENV"))${RESET} "

}

# Time
function prompt-time () {

    [[ $SHOW_TIME -eq 1 ]] && echo -ne "$(color "$TIME")\t${RESET} "

}

# Build prompt dynamically
function set-prompt () {

    local exit_code=$? ps="" mod symbol exit_color

    for mod in "${PROMPT_ORDER[@]}"; do case $mod in
            user_host       ) ps+="$(prompt-user-host)" ;;
            path            ) ps+="$(prompt-path)"      ;;
            git             ) ps+="$(prompt-git)"       ;;
            venv            ) ps+="$(prompt-venv)"      ;;
            time            ) ps+="$(prompt-time)"      ;;
    esac ; done

    # Choose final symbol
    [[ $EUID -eq 0 ]] && symbol=$PROMPT_SYMBOL_ROOT
    [[ $EUID -ne 0 ]] && symbol=$PROMPT_SYMBOL

    # Color by exit code
    [[ $exit_code -eq 0 ]] && exit_color=$PROMPT_SUCCESS
    [[ $exit_code -ne 0 ]] && exit_color=$PROMPT_ERROR

    PS1="$ps$(color "$exit_color")$symbol${RESET} "
}

# Load config
# shellcheck disable=SC1091
if [[ -f "$HOME/.config/bashship.conf " ]]; then
    source "$HOME/.config/bashship.conf"
elif [[ -f "/etc/bashship.conf" ]]; then
    source "/etc/bashship.conf"
fi

RESET=$(tput sgr0)
BOLD=$(tput bold)

set-prompt


